# -*- coding: utf-8 -*-
"""Network Failure.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yODjJmdfYLZU39PfYAhNBLoTvpxMcdaL
"""

import pandas as pd
import numpy as np

# Load dataset
df = pd.read_csv("sys_failure.csv")

# Convert Timestamp to DateTime format
df["Timestamp"] = pd.to_datetime(df["Timestamp"])
df.sort_values(by="Timestamp", inplace=True)

# Define a mapping for categorical network usage descriptions
network_mapping = {
    "Normal": 50,  # Assign mid-range value
    "High Traffic": 80,
    "Congested": 95,
    "Low": 20,
    "Critical": 99
}

# Apply mapping & convert percentages to float
df["Network_Usage"] = df["Network_Usage"].replace(network_mapping)
df["Network_Usage"] = df["Network_Usage"].astype(float)  # Ensure numerical format

print(df["Network_Usage"].unique())  # Check if conversion is correct

from statsmodels.tsa.arima.model import ARIMA
import matplotlib.pyplot as plt

# Train ARIMA Model
arima_model = ARIMA(df["Network_Usage"], order=(5,1,0))  # Order (p,d,q) is optimized
model_fit = arima_model.fit()

# Forecast next 10 timestamps
future_forecast = model_fit.forecast(steps=10)
print("Predicted Network Usage:\n", future_forecast)

# Plot actual vs predicted
plt.figure(figsize=(10,5))
plt.plot(df["Timestamp"], df["Network_Usage"], label="Actual Network Usage", color="yellow")
plt.xlabel("Time")
plt.ylabel("Network Usage (%)")
plt.legend()
plt.show()
plt.plot(pd.date_range(df["Timestamp"].iloc[-1], periods=10, freq="T"), future_forecast, label="Predicted", color="red")
plt.xlabel("Time")
plt.ylabel("Network Usage (%)")
plt.legend()
plt.show()

from sklearn.metrics import mean_squared_error, mean_absolute_error
import numpy as np

# Get last 10 actual network usage values for comparison
actual_values = df["Network_Usage"].iloc[-10:].values

# Compute ARIMA errors
mse_arima = mean_squared_error(actual_values, future_forecast)
rmse_arima = np.sqrt(mse_arima)
mae_arima = mean_absolute_error(actual_values, future_forecast)

print(f"ARIMA MSE: {mse_arima}")
print(f"ARIMA RMSE: {rmse_arima}")
print(f"ARIMA MAE: {mae_arima}")